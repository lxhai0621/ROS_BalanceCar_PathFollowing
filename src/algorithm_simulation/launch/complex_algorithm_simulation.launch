<launch>
    <arg name="trajectory_type" default="epitrochoid"/> 
    <arg name="z_pos" default="0.0"/>
    <arg name="roll" default="0"/>
    <arg name="pitch" default="0"/>
    <!--  ************** circle ***************  -->
    <arg name="x_pos" default="0.0" if="$(eval trajectory_type == 'circle')" />
    <arg name="y_pos" default="-5.0" if="$(eval trajectory_type == 'circle')" />
    <arg name="yaw" default="0.0" if="$(eval trajectory_type == 'circle')" />
    <!--  ************** epitrochoid ***************-->
    <arg name="x_pos" default="3.0"  if="$(eval trajectory_type == 'epitrochoid')" />
    <arg name="y_pos" default="0.01" if="$(eval trajectory_type == 'epitrochoid')"/>
    <arg name="yaw" default="-1.57" if="$(eval trajectory_type == 'epitrochoid')"/>
    <!--  ************** square *************** -->
    <arg name="x_pos" default="0.0" if="$(eval trajectory_type == 'square')"/>
    <arg name="y_pos" default="0.0" if="$(eval trajectory_type == 'square')"/>
    <arg name="yaw" default="1.57075" if="$(eval trajectory_type == 'square')"/>

    <param name="robot_description" command="$(find xacro)/xacro '$(find car_model)/urdf/car_macro.urdf.xacro'"/><!--将车子模型载入参数服务器-->
    <include file="$(find gazebo_ros)/launch/empty_world.launch"/><!--gazebo载入空白世界-->
    <rosparam command="load" file="$(find car_model)/config/mycar_config_control.yaml"/>
    <node pkg="gazebo_ros" type="spawn_model" name="model" args="-urdf -model mycar -x $(arg x_pos) -y $(arg y_pos) -z $(arg z_pos) -R $(arg roll) -P $(arg pitch) -Y $(arg yaw) -param robot_description"/>
    <node pkg="joint_state_publisher" type="joint_state_publisher" name="joint_state_publisher"/>
    <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher"/>
    <node pkg="rviz" type="rviz" name="rviz" args="-d $(find car_model)/config/car_model.rviz"/>

    <node pkg="algorithm_simulation" type="pose_velocity_get" name="pose_velocity_get" output="screen"/>
    <node pkg="algorithm_simulation" type="complex_waypointsLoader.py" name="waypointsLoader" output="screen">
        <param name="velocity" value="1"/>
        <param name="trajectory_type" value="epitrochoid"/>
    </node>
    
</launch>