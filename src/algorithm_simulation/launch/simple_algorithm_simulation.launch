<launch>

  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>
  <arg name="model" default="$(find car_model)/urdf/car.xacro"/>

  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
  </include>

  <param name="robot_description" command="$(find xacro)/xacro $(arg model)" />
  <rosparam command="load" file="$(find car_model)/config/joints.yaml" ns="joint_state_controller" />
  <rosparam command="load" file="$(find car_model)/config/wheels.yaml" ns="wheels_controller" />

  <!-- push robot_description to factory and spawn robot in gazebo -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model"
        args="-z 0.3 -unpause -urdf -model robot -param robot_description" respawn="false" output="screen" />

  <node name="controller_spawner" pkg="controller_manager" type="spawner" 
        args="joint_state_controller
                wheels_controller"/>
  
  <node pkg="joint_state_publisher" type="joint_state_publisher" name="joint_state_publisher" output="screen" />
  <node pkg="robot_state_publisher" type="robot_state_publisher"  name="robot_state_publisher"/>
  <node pkg="rviz" type="rviz" name="rviz" args="-d $(find car_model)/config/balance_car.rviz"/>

  <node pkg="balance_car_control" type="sensor" name="sensor" output="screen" />
  <node pkg="balance_car_control" type="controller_pid" name="controller_pid" output="screen" />
  <node pkg="algorithm_simulation" type="pose_velocity_get" name="pose_velocity_get" output="screen"/>
  <node pkg="algorithm_simulation" type="waypointsLoader.py" name="waypointsLoader" output="screen">
    <param name="filename" value="$(find algorithm_simulation)/csv/waypoints.csv"/>
    <param name="velocity" value="2.5"/>
  </node>
  <node pkg="algorithm_simulation" type="transform_publish" name="transform_publish" output="screen"/>
  <!--<node pkg="tf" type="static_transform_publisher" name="odom_to_dumy_link" args="0.0 0.0 0.0 0 0 0.0 /odom /dummy_link 10000"/>-->
</launch>